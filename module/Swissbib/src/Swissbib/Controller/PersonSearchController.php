<?php
/**
 * PersonSearchController.php
 *
 * PHP Version 7
 *
 * Copyright (C) swissbib 2018
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2,
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.    See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA    02111-1307    USA
 *
 * @category VuFind
 * @package  Controller
 * @author   Christoph Boehm <cbo@outermedia.de>
 * @license  http://opensource.org/licenses/gpl-2.0.php GNU General Public License
 * @link     http://www.vufind.org  Main Page
 */
namespace Swissbib\Controller;

use Zend\Config\Config;
use Zend\Http\PhpEnvironment\Response;
use Zend\View\Model\ViewModel;

use VuFind\Controller\SearchController as VuFindSearchController;
use VuFind\Search\Results\PluginManager as VuFindSearchResultsPluginManager;

use Swissbib\VuFind\Search\Results\PluginManager
    as SwissbibSearchResultsPluginManager;
use Zend\Stdlib\Parameters;

/**
 * Class PersonSearchController
 *
 * @category VuFind
 * @package  Swissbib\Controller
 * @author   Christoph Boehm <cbo@outermedia.de>
 * @license  http://opensource.org/licenses/gpl-2.0.php GNU General Public License
 * @link     http://www.vufind.org  Main Page
 */
class PersonSearchController extends VuFindSearchController
{
    public function resultsAction()
    {
        return parent::resultsAction(); // TODO: Change the autogenerated stub
    }

    public function coAuthorsAction()
    {
        $id = $this->getRequest()->getQuery()['lookfor'] ?? "";
        $page = $this->getRequest()->getQuery()['page'] ?? 1;
        $limit = $this->getRequest()->getQuery()['limit'] ?? 20;

        $authors = $this->elasticsearchsearch()->searchCoContributorsOf(
            $id, $limit, 1000, $page
        );

        return $this->createViewModel(["results" => $authors]);
    }

    public function sameGenreAction()
    {
        $genre = $this->getRequest()->getQuery()['lookfor'] ?? "";
        $page = $this->getRequest()->getQuery()['page'] ?? 1;
        $limit = $this->getRequest()->getQuery()['limit'] ?? 20;

        $authors = $this->elasticsearchsearch()->searchElasticSearch(
            $genre, "person_by_genre", null, null, $limit, $page
        );

        return $this->createViewModel(["results" => $authors]);
    }

    public function sameMovementAction()
    {
        $movement = $this->getRequest()->getQuery()['lookfor'] ?? "";
        $page = $this->getRequest()->getQuery()['page'] ?? 1;
        $limit = $this->getRequest()->getQuery()['limit'] ?? 20;

        $authors = $this->elasticsearchsearch()->searchElasticSearch(
            $movement, "person_by_movement", null, null, $limit, $page
        );

        return $this->createViewModel(["results" => $authors]);
    }

    /**
     * Get results manager
     * If target is extended, get a customized manager
     *
     * @return VuFindSearchResultsPluginManager|SwissbibSearchResultsPluginManager
     */
    protected function getResultsManager()
    {
        if (!isset($this->extendedTargets)) {
            $mainConfig = $this->serviceLocator->get('Vufind\Config')
                ->get('config');
            $extendedTargetsSearchClassList
                = $mainConfig->SwissbibSearchExtensions->extendedTargets;

            $this->extendedTargets = array_map(
                'trim', explode(',', $extendedTargetsSearchClassList)
            );
        }

        if (in_array($this->searchClassId, $this->extendedTargets)) {
            return $this->serviceLocator
                ->get('VuFind\SearchResultsPluginManager');
        }

        return parent::getResultsManager();
    }
}
